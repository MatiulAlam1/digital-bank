application-title=Account Service
spring.application.name=${SPRING_APPLICATION_NAME:account-service}
server.port=${SERVER_PORT:9492}
#spring.config.import=configserver:http://localhost:8888
spring.graphql.path=/graphql
spring.cloud.config.enabled=${SPRING_CLOUD_CONFIG_ENABLED:false}
# Database connection properties
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/user-service-db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:root}
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
# JPA properties
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}

# Kafka Configuration
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.producer.bootstrap-servers=${SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.bootstrap-servers=${SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.auto-offset-reset=${SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET:earliest}

# Producer Configuration
spring.kafka.producer.key-serializer=${SPRING_KAFKA_PRODUCER_KEY_SERIALIZER:org.apache.kafka.common.serialization.StringSerializer}
spring.kafka.producer.value-serializer=${SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER:org.apache.kafka.common.serialization.StringSerializer}


management.endpoint.health.show-details=always

# Redis Configuration
spring.redis.host=${SPRING_REDIS_HOST:localhost}
spring.redis.port=${SPRING_REDIS_PORT:6379}
spring.redis.password=${SPRING_REDIS_PASSWORD:}
management.endpoints.web.exposure.include=*

# Debug core GraphQL functionality
logging.level.org.springframework.graphql=DEBUG

# Debug GraphQL query execution
logging.level.org.springframework.graphql.execution=TRACE

# Debug HTTP handling for /graphql endpoint
logging.level.org.springframework.graphql.web=TRACE

# Debug internal GraphQL library (graphql-java)
logging.level.graphql.execution=DEBUG

# Define access token paths for private and public keys
access-token.private=${ACCESS_TOKEN_PRIVATE_KEY_PATH}
access-token.public=${ACCESS_TOKEN_PUBLIC_KEY_PATH}

# Define refresh token paths for private and public keys
refresh-token.private=${REFRESH_TOKEN_PRIVATE_KEY_PATH}
refresh-token.public=${REFRESH_TOKEN_PUBLIC_KEY_PATH}

# Set active Spring profile
spring.profiles.active=dev

# Connect to the MongoDB database
#spring.data.mongodb.uri=mongodb://${MONGODB_HOST}:${MONGODB_PORT}/?authSource=${MONGODB_DB}
#spring.data.mongodb.database=${MONGODB_DB}

# Logging level for Spring Security
logging.level.org.springframework.security=DEBUG