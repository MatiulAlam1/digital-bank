plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.user-service'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	gradlePluginPortal()
	maven { url "https://repo.spring.io/milestone" }
}

ext {
	set('springCloudVersion', "2024.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.0.Final'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.4.1'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.11.0'
	compileOnly 'org.projectlombok:lombok'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.1.1'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation("org.springframework.boot:spring-boot-starter-security:3.4.4")
	implementation("org.springframework.boot:spring-boot-starter-oauth2-resource-server:3.4.4")
	implementation("org.springframework.cloud:spring-cloud-starter-vault-config:4.2.1")
	implementation("org.apache.commons:commons-lang3:3.0")
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation("com.google.api-client:google-api-client:2.7.2")
	implementation("com.google.api-client:google-api-client-jackson2:1.20.0")
	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6")
	implementation("org.springdoc:springdoc-openapi-starter-common:2.8.6")
	implementation project(':common-service')
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

bootJar {
	enabled = true
	mainClass = 'com.user_service.UserServiceApplication' // Replace with your main class
}

tasks.named('bootBuildImage') {
	imageName = "bjitpdmad/user-service:latest"
}

/*
bootJar {
	enabled = true
	mainClass = 'com.user_service.UserServiceApplication' // Update if your main class is different
}

springBoot {
	mainClass = 'com.user_service.UserServiceApplication'
}*/
