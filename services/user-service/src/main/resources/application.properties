application-title=User Service
spring.application.name=${SPRING_APPLICATION_NAME:user-service}
server.port=${SERVER_PORT:9491}
#spring.config.import=configserver:http://localhost:8888

spring.cloud.config.enabled=${SPRING_CLOUD_CONFIG_ENABLED:false}
# Database connection properties
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/user-service-db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:root}
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
# JPA properties
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:create-drop}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
# sql init
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
# Kafka Configuration
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.producer.bootstrap-servers=${SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.bootstrap-servers=${SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.auto-offset-reset=${SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET:earliest}

# Producer Configuration
spring.kafka.producer.key-serializer=${SPRING_KAFKA_PRODUCER_KEY_SERIALIZER:org.apache.kafka.common.serialization.StringSerializer}
spring.kafka.producer.value-serializer=${SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER:org.springframework.kafka.support.serializer.JsonSerializer}
spring.kafka.producer.properties.spring.json.type.mapping=notificationMessage:com.user_service.service.kafka.NotificationMessage

management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Configuration for Hashicorp vault
spring.cloud.vault.host=127.0.0.1
spring.cloud.vault.port=8200
spring.cloud.vault.kv.enabled=true
spring.config.import=vault://
spring.cloud.vault.uri=http://127.0.0.1:8200
spring.cloud.vault.authentication=approle
spring.cloud.vault.app-role.role-id=${ROLE_ID:9bfb2181-60c8-bda0-9d62-4a03cd67367f}
spring.cloud.vault.app-role.secret-id=${SECRET_ID:4ba46bee-4523-1617-c943-027393873ec6}
spring.cloud.vault.kv.backend=secret
spring.cloud.vault.kv.application-name=rsa-key-password-test

# Vault private key and public key
user.service.private-key=MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCwaNNBssGRmdAppzlav1n7skuew1IBkNg4RphwzM8nYxtQh9lwgVx3JvJgB/cynnHAYo/RWnWqAclITdfczlOYDpFn1V7drx5Pje+OXR1YFx9kG2l/Cq1L+aWg6V3DdZ5W1zGaC8kW+/13OJzzrSbk7sdIlr+6LTGNlZMphECed66YIAJ49AXOnJ4qYhhmIUqSXOYHz+jcx8lI6No4oW5geNnFyiwCMMDfPE6CJe8TusRfTogrVHzlquhCdxTXVRsUh7//MPwJRhuBllIKtx8E9DZTcykvFVu4A49gzls1YB2dsEtHv31+aLeXNKl5BlYa7y0o8U6/O79SsnFHn4/PAgMBAAECggEAGcw6mLD7fb9woabCzHKPRi+cv2rw4ym7dP9d66EH6kqkA/LZ6YoBa6tWZpTDobNqDyhav9LqwiHgvaIknzXNI799pCGf7eteE2Q+VCNp1ygKfylDFEELdsDbZ9y4yYy5yxlNN6nhjmrrdjPhQAFiXrhMjGD/SMqzJHFrQ/cDPCkmCsIbrJpmwM8AABknUsNCf3hliee60RyZiABkgJtPwDCc8Gul0V/sL4SP3yoe08KnqrIc66dkOXj2OiC+0a1wAlc5N0WyxFBeORW3In494guQMjG++4WLpnpqIOSKwKc2FLdQz1oML2OgIBvfCIpQ8wEUp4gAheOODGw2jEEUgQKBgQDn564bKtsTazJs+SHojGMB28nPeSXgh8q85a8MY6DKgLy+oDbqrrfIbVXFvkJS71o4tep2HviuK+Ep92WZ91UkRHT8y3XdoB7CofObGNehVux6sPcXb0IuBoxV1J6fGDarzmk72DDCtPemA9W9VZLBcb0+8ohhlkdYD0UBuqQjCwKBgQDCvQxxYgWgCDq7QodcaDSHCZ9ZKrsAZyrryK1KLDFaDrycMAfDVCyI6fla76RpVzIVWTW1y0gmviMS1Ozp7cameLHdvWA/DS7442B3C8ytHHgS4UHqE3hh8I5JfGixSmlfHSFNp655kr4ChIT7aAJ/ynnz9z9BaPPe7hrfTD6AzQKBgQCw6LmV+gRz9OPb49XtPCNPSKbUgjvV5GFR5vm5vsrrkHfsB/a84xpKaLX1CuY3tGYkOwqon4nf/JNhW1yDrv2hlCOWsXOx5TNyEO/wkmv0pYXzNsrYcsSOreoik/eJsIQMXoNC5vKTplABso08SWqR7b2LpqNJpsW4NLXU0tfh7wKBgQCXPJy6PacituFt5ugbEu6gZQ+0/yOF15mUziAOt62IRGOkZQTSZL/FgPhf8DbefJJv0/2LdxlMxWOVz3lC35/kT13LWLSzovh04JldOvO1CaQS/Y/kS0S1w02tsonYDnMxI/1mQrCUyCr655IjcY5nUodNuhoNIYYr/v0tqBfujQKBgE62LwgmOooIz2nyj/Qmo61iKffRIGDf6Ptxj2wRv8TFGFOcEZ8RG9HRGBtOz82Hv83GFB7MAI4ERrkSpW3SJfH5ks/wkV7O+TxGUN6GUTXSoihbW2qyUD/E1wFtnf0ZifU3q32MrQqmvq09VVKrkwomSGx3NweubHA1yxgO60W2
user.service.public-key=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsGjTQbLBkZnQKac5Wr9Z+7JLnsNSAZDYOEaYcMzPJ2MbUIfZcIFcdybyYAf3Mp5xwGKP0Vp1qgHJSE3X3M5TmA6RZ9Ve3a8eT43vjl0dWBcfZBtpfwqtS/mloOldw3WeVtcxmgvJFvv9dzic860m5O7HSJa/ui0xjZWTKYRAnneumCACePQFzpyeKmIYZiFKklzmB8/o3MfJSOjaOKFuYHjZxcosAjDA3zxOgiXvE7rEX06IK1R85aroQncU11UbFIe//zD8CUYbgZZSCrcfBPQ2U3MpLxVbuAOPYM5bNWAdnbBLR799fmi3lzSpeQZWGu8tKPFOvzu/UrJxR5+PzwIDAQAB

# Security Configuration
spring.security.oauth2.client.registration.google.client-id=#########
spring.security.oauth2.client.registration.google.client-secret=##############
spring.security.oauth2.client.registration.google.scope=profile,email
#spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
#spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
#spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
#spring.security.oauth2.client.provider.google.user-name-attribute=sub

spring.security.filter.dispatcher-types=REQUEST,ERROR,ASYNC

# Gateway Security Configuration
gateway.secret.key=uH7tR9xP2qL5mE8vZ3yA6bN1cX4sW7dF

#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# Swagger
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true